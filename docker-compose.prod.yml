services:
  api:
    build:
      context: ./api
      dockerfile: .docker/prod/Dockerfile
    image: dan-warfighter-prod-api
    container_name: dan-warfighter-prod-api
    command: .docker/prod/start.sh
    volumes:
      - ./api:/api
    env_file:
      - ./.envs/.dev
    depends_on:
      - warfighter-db
    networks:
      - caeser-network

  frontend:
    build:
      context: ./frontend
      dockerfile: .docker/prod/Dockerfile
    image: dan-warfighter-prod-frontend
    container_name: dan-warfighter-prod-frontend
    command: .docker/prod/start.sh
    volumes:
      - ./frontend:/frontend
    ports:
    - "3000:3000"
  
    env_file:
      - ./.envs/.prod
    depends_on:
      - api
    networks:
      - caeser-network

  warfighter-db:
    image: postgres:latest
    volumes:
      - warfighter_prod_postgres_data:/var/lib/postgresql/data
    env_file:
      - .envs/.prod
    networks:
      - caeser-network

  redis:
    image: redis:latest
    networks:
      - caeser-network
  
  nginx:
    build: ./nginx
    ports:
      - "8080:8080"
    depends_on:
      - frontend
    networks:
      - caeser-network
    volumes:
      - ./nginx/logs:/var/log/nginx
    

networks:
  caeser-network:
    external: true

volumes:
  warfighter_prod_postgres_data: